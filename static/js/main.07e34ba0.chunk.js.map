{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlfor","TextForm","useState","text","setText","stext","searrch","style","color","heading","value","backgroundColor","onChange","event","console","log","target","rows","newText","toUpperCase","toLowerCase","split","filter","element","length","search","Alert","height","alert","role","word","lower","charAt","slice","captailize","msg","defaultProps","about","App","setMode","setAlert","showAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.07e34ba0.chunk.js","sourcesContent":["\r\nimport propTypes from 'prop-types'\r\nimport React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.about}</a>\r\n        </li> */}\r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: propTypes.string,\r\n    about: propTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    about: 'Set about'\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        \r\n    }\r\n    const handleLoClick = ()=>{\r\n        console.log(\"Lowercase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        \r\n    }\r\n    const handleclearClick = ()=>{\r\n       \r\n        let newText = '';\r\n        setText(newText);\r\n    }\r\n    const handlesearch = ()=>{\r\n        let newText = text.search(stext);\r\n        if(newText>=0){\r\n            searrch(\"Found\");\r\n        }\r\n        else{\r\n           searrch(\"Not found\");\r\n        }\r\n       \r\n        \r\n    }\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"On change\");\r\n        setText(event.target.value)\r\n    }\r\n    const handlesChange = (event)=>{\r\n         searrch(event.target.value)\r\n    }\r\n    \r\n    const [text, setText] = useState('');\r\n    const [stext, searrch] = useState('');\r\n    \r\n   \r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n           \r\n<div className=\"mb-3\">\r\n    <h1>{props.heading}</h1>\r\n  <textarea className=\"form-control\" value={text} style={{backgroundColor: props.mode==='dark'?'#9292c4':'white' , color: props.mode==='dark'?'white':'black'  }} id=\"myBox\" onChange={handleOnChange} rows=\"6\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to uppercase</button>\r\n<button className=\"btn btn-primary mx-3\" onClick={handleLoClick} >Convert to lowercase</button>\r\n<button className=\"btn btn-primary \" onClick={handleclearClick} >Clear text</button>\r\n\r\n        </div>\r\n        <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h1>Your text summary</h1>\r\n            <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words & {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n           \r\n            <div>\r\n        <input className=\"form-control me-2\"  value={stext}  onChange={handlesChange} style={{backgroundColor: props.mode==='dark'?'#9292c4':'white' , color: props.mode==='dark'?'white':'black' }}/>\r\n        <button className=\"btn btn-outline-success my-2\" onClick={handlesearch} >Search</button>\r\n      </div>\r\n            \r\n            <h1>Preview</h1>\r\n            <p><span className=\"border border-info\">{text}</span></p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const captailize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style= {{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{captailize(props.alert.type)}</strong>: {props.alert.msg}\r\n           \r\n  \r\n</div>}\r\n </div>\r\n        \r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import About from './components/About'\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message , type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500);\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'gray';\n      showAlert(\"Dark mode enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Dark mode disabled\",\"success\");\n    }\n  }\n  return (\n   <>\n   {/* <Router> */}\n<Navbar title=\"Textutils\" about=\"About\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n{/* <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextForm heading = \"Enter text to analyze below\" mode={mode} />\n          {/* </Route>\n        </Switch> */}\n \n \n</div>\n {/* </Router> */}\n   </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}